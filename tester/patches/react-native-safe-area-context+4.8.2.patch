diff --git a/node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx b/node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx
index 5da007e..3ea868e 100644
--- a/node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx
+++ b/node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx
@@ -1,5 +1,5 @@
 import * as React from 'react';
-import { Dimensions, StyleSheet, type ViewProps } from 'react-native';
+import { Dimensions, StyleSheet, useWindowDimensions, type ViewProps } from 'react-native';
 import { NativeSafeAreaProvider } from './NativeSafeAreaProvider';
 import type {
   EdgeInsets,
@@ -8,7 +8,7 @@ import type {
   Rect,
 } from './SafeArea.types';
 
-const isDev = process.env.NODE_ENV !== 'production';
+const isDev = true;
 
 export const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(
   null,
@@ -38,8 +38,8 @@ export function SafeAreaProvider({
   style,
   ...others
 }: SafeAreaProviderProps) {
-  const parentInsets = useParentSafeAreaInsets();
-  const parentFrame = useParentSafeAreaFrame();
+  const parentInsets = useSafeAreaInsets();
+  const parentFrame = useSafeAreaFrame();
   const [insets, setInsets] = React.useState<EdgeInsets | null>(
     initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,
   );
@@ -121,18 +121,17 @@ const NO_INSETS_ERROR =
   'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';
 
 export function useSafeAreaInsets(): EdgeInsets {
-  const insets = React.useContext(SafeAreaInsetsContext);
-  if (insets == null) {
-    throw new Error(NO_INSETS_ERROR);
-  }
+  const insets = {left: 0, right: 0, top: 0, bottom: 0}
   return insets;
 }
 
 export function useSafeAreaFrame(): Rect {
-  const frame = React.useContext(SafeAreaFrameContext);
-  if (frame == null) {
-    throw new Error(NO_INSETS_ERROR);
-  }
+  const {width, height} = useWindowDimensions();
+  const frame = {
+    x: 0,
+    y: 0,
+    width,
+    height}
   return frame;
 }
 
